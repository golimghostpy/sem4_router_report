{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golimghost\\\\.vscode\\\\sem4_rgz\\\\rgz\\\\src\\\\pages\\\\RouterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouterForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    login: '',\n    password: ''\n  });\n  const [selectedOptions, setSelectedOptions] = useState({\n    name: false,\n    interfaces: false,\n    load: false,\n    encryption: false,\n    blockedResources: false\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleToggleChange = name => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [name]: !selectedOptions[name]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/generate-report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: formData.login,\n          options: selectedOptions\n        })\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        navigate('/report-name', {\n          state: {\n            pdfUrl: url,\n            login: formData.login\n          }\n        });\n      } else {\n        alert('Ошибка генерации отчёта');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0430 \\u043E\\u0442\\u0447\\u0451\\u0442\\u0430 \\u0434\\u043B\\u044F \\u0440\\u043E\\u0443\\u0442\\u0435\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(RouterForm, \"W8o/azGKTsdegPD5Th+vC1Y7rX0=\", false, function () {\n  return [useNavigate];\n});\n_c = RouterForm;\nexport default RouterForm;\nvar _c;\n$RefreshReg$(_c, \"RouterForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RouterForm","_s","navigate","formData","setFormData","login","password","selectedOptions","setSelectedOptions","name","interfaces","load","encryption","blockedResources","handleInputChange","e","value","target","handleToggleChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","username","options","ok","blob","url","window","URL","createObjectURL","state","pdfUrl","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/golimghost/.vscode/sem4_rgz/rgz/src/pages/RouterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RouterForm = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    login: '',\r\n    password: '',\r\n  });\r\n  const [selectedOptions, setSelectedOptions] = useState({\r\n    name: false,\r\n    interfaces: false,\r\n    load: false,\r\n    encryption: false,\r\n    blockedResources: false,\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleToggleChange = (name) => {\r\n    setSelectedOptions({ ...selectedOptions, [name]: !selectedOptions[name] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const response = await fetch('http://localhost:5000/generate-report', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          username: formData.login,\r\n          options: selectedOptions,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        navigate('/report-name', { state: { pdfUrl: url, login: formData.login } });\r\n      } else {\r\n        alert('Ошибка генерации отчёта');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Настройка отчёта для роутера</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* ... (остаётся без изменений) ... */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouterForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC;IACrDa,IAAI,EAAE,KAAK;IACXC,UAAU,EAAE,KAAK;IACjBC,IAAI,EAAE,KAAK;IACXC,UAAU,EAAE,KAAK;IACjBC,gBAAgB,EAAE;EACpB,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEN,IAAI;MAAEO;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCb,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,IAAI,GAAGO;IAAM,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,kBAAkB,GAAIT,IAAI,IAAK;IACnCD,kBAAkB,CAAC;MAAE,GAAGD,eAAe;MAAE,CAACE,IAAI,GAAG,CAACF,eAAe,CAACE,IAAI;IAAE,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMU,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAEzB,QAAQ,CAACE,KAAK;UACxBwB,OAAO,EAAEtB;QACX,CAAC;MACH,CAAC,CAAC;MAEF,IAAIc,QAAQ,CAACS,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;QAC5C7B,QAAQ,CAAC,cAAc,EAAE;UAAEkC,KAAK,EAAE;YAAEC,MAAM,EAAEL,GAAG;YAAE3B,KAAK,EAAEF,QAAQ,CAACE;UAAM;QAAE,CAAC,CAAC;MAC7E,CAAC,MAAM;QACLiC,KAAK,CAAC,yBAAyB,CAAC;MAClC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACExC,OAAA;IAAK0C,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B3C,OAAA;MAAA2C,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrC/C,OAAA;MAAMgD,QAAQ,EAAE5B;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC7C,EAAA,CAxDID,UAAU;EAAA,QACGH,WAAW;AAAA;AAAAmD,EAAA,GADxBhD,UAAU;AA0DhB,eAAeA,UAAU;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}