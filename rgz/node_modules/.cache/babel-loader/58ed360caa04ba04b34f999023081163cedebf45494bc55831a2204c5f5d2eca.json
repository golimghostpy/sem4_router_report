{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golimghost\\\\.vscode\\\\sem4_rgz\\\\rgz\\\\src\\\\pages\\\\RouterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouterForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    login: '',\n    password: ''\n  });\n  const [selectedOptions, setSelectedOptions] = useState({\n    name: false,\n    interfaces: false,\n    load: false,\n    encryption: false,\n    blockedResources: false\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleToggleChange = name => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [name]: !selectedOptions[name]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:5000/api/generate-report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login: formData.login,\n          options: selectedOptions\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Ошибка при генерации отчета');\n      }\n      const reportData = await response.json();\n      navigate('/report', {\n        state: reportData\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0430 \\u043E\\u0442\\u0447\\u0451\\u0442\\u0430 \\u0434\\u043B\\u044F \\u0440\\u043E\\u0443\\u0442\\u0435\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041B\\u043E\\u0433\\u0438\\u043D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"login\",\n          value: formData.login,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043B\\u044F \\u043E\\u0442\\u0447\\u0451\\u0442\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), Object.entries(selectedOptions).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-switch\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [key === 'name' && 'Название роутера', key === 'interfaces' && 'Сетевые интерфейсы', key === 'load' && 'Загруженность CPU/RAM', key === 'encryption' && 'Настройки шифрования', key === 'blockedResources' && 'Заблокированные ресурсы', /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: value,\n              onChange: () => handleToggleChange(key),\n              className: \"toggle-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"toggle-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        disabled: isLoading,\n        children: isLoading ? 'Формирование отчета...' : 'Сформировать отчёт'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(RouterForm, \"6rUQ725jhUdJJNw/VJCfPuxC6to=\", false, function () {\n  return [useNavigate];\n});\n_c = RouterForm;\nexport default RouterForm;\nvar _c;\n$RefreshReg$(_c, \"RouterForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RouterForm","_s","navigate","formData","setFormData","login","password","selectedOptions","setSelectedOptions","name","interfaces","load","encryption","blockedResources","isLoading","setIsLoading","error","setError","handleInputChange","e","value","target","handleToggleChange","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","options","ok","Error","reportData","json","state","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","Object","entries","map","key","checked","disabled","_c","$RefreshReg$"],"sources":["C:/Users/golimghost/.vscode/sem4_rgz/rgz/src/pages/RouterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RouterForm = () => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        login: '',\r\n        password: '',\r\n    });\r\n    const [selectedOptions, setSelectedOptions] = useState({\r\n        name: false,\r\n        interfaces: false,\r\n        load: false,\r\n        encryption: false,\r\n        blockedResources: false,\r\n    });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleToggleChange = (name) => {\r\n        setSelectedOptions({ ...selectedOptions, [name]: !selectedOptions[name] });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/generate-report', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    login: formData.login,\r\n                    options: selectedOptions\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка при генерации отчета');\r\n            }\r\n\r\n            const reportData = await response.json();\r\n            navigate('/report', { state: reportData });\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h1>Настройка отчёта для роутера</h1>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Логин:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"login\"\r\n                        value={formData.login}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Пароль:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"options-group\">\r\n                    <h3>Выберите данные для отчёта:</h3>\r\n                    {Object.entries(selectedOptions).map(([key, value]) => (\r\n                        <div key={key} className=\"toggle-switch\">\r\n                            <label>\r\n                                {key === 'name' && 'Название роутера'}\r\n                                {key === 'interfaces' && 'Сетевые интерфейсы'}\r\n                                {key === 'load' && 'Загруженность CPU/RAM'}\r\n                                {key === 'encryption' && 'Настройки шифрования'}\r\n                                {key === 'blockedResources' && 'Заблокированные ресурсы'}\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={value}\r\n                                    onChange={() => handleToggleChange(key)}\r\n                                    className=\"toggle-input\"\r\n                                />\r\n                                <span className=\"toggle-slider\"></span>\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"submit-btn\" disabled={isLoading}>\r\n                    {isLoading ? 'Формирование отчета...' : 'Сформировать отчёт'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RouterForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}