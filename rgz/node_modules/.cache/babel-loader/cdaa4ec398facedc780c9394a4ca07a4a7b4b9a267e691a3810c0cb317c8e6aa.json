{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golimghost\\\\.vscode\\\\sem4_rgz\\\\rgz\\\\src\\\\pages\\\\RouterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RouterForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    login: '',\n    password: ''\n  });\n  const [selectedOptions, setSelectedOptions] = useState({\n    name: false,\n    interfaces: false,\n    load: false,\n    encryption: false,\n    blockedResources: false\n  });\n  const [domainsToBlock, setDomainsToBlock] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleToggleChange = name => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [name]: !selectedOptions[name]\n    });\n  };\n  const handleDomainsChange = e => {\n    setDomainsToBlock(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    try {\n      const domainsArray = domainsToBlock.split('\\n').map(domain => domain.trim()).filter(domain => domain.length > 0);\n      const response = await fetch('http://localhost:5000/api/report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login: formData.login,\n          options: selectedOptions,\n          domains_to_block: domainsArray\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || 'Ошибка при генерации отчета');\n      }\n      navigate('/report', {\n        state: data\n      });\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0430 \\u043E\\u0442\\u0447\\u0451\\u0442\\u0430 \\u0434\\u043B\\u044F \\u0440\\u043E\\u0443\\u0442\\u0435\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041B\\u043E\\u0433\\u0438\\u043D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"login\",\n          value: formData.login,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043B\\u044F \\u043E\\u0442\\u0447\\u0451\\u0442\\u0430:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), Object.entries(selectedOptions).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-switch\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [key === 'name' && 'Название роутера', key === 'interfaces' && 'Сетевые интерфейсы', key === 'load' && 'Загруженность CPU/RAM', key === 'encryption' && 'Настройки шифрования', key === 'blockedResources' && 'Заблокированные ресурсы', /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: value,\n              onChange: () => handleToggleChange(key),\n              className: \"toggle-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"toggle-slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u0414\\u043E\\u043C\\u0435\\u043D\\u044B \\u0434\\u043B\\u044F \\u0431\\u043B\\u043E\\u043A\\u0438\\u0440\\u043E\\u0432\\u043A\\u0438 (\\u043F\\u043E \\u043E\\u0434\\u043D\\u043E\\u043C\\u0443 \\u043D\\u0430 \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"domainsToBlock\",\n          value: domainsToBlock,\n          onChange: handleDomainsChange,\n          rows: 4,\n          placeholder: \"example.com\\\\nyoutube.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        disabled: isLoading,\n        children: isLoading ? 'Формирование отчета...' : 'Сформировать отчёт'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(RouterForm, \"uwsCPE1RhRBublUlcFwvphf9ps8=\", false, function () {\n  return [useNavigate];\n});\n_c = RouterForm;\nexport default RouterForm;\nvar _c;\n$RefreshReg$(_c, \"RouterForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RouterForm","_s","navigate","formData","setFormData","login","password","selectedOptions","setSelectedOptions","name","interfaces","load","encryption","blockedResources","domainsToBlock","setDomainsToBlock","isLoading","setIsLoading","error","setError","handleInputChange","e","value","target","handleToggleChange","handleDomainsChange","handleSubmit","preventDefault","domainsArray","split","map","domain","trim","filter","length","response","fetch","method","headers","body","JSON","stringify","options","domains_to_block","data","json","ok","Error","message","state","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","Object","entries","key","checked","rows","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/golimghost/.vscode/sem4_rgz/rgz/src/pages/RouterForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst RouterForm = () => {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        login: '',\r\n        password: '',\r\n    });\r\n    const [selectedOptions, setSelectedOptions] = useState({\r\n        name: false,\r\n        interfaces: false,\r\n        load: false,\r\n        encryption: false,\r\n        blockedResources: false,\r\n    });\r\n    const [domainsToBlock, setDomainsToBlock] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleToggleChange = (name) => {\r\n        setSelectedOptions({ ...selectedOptions, [name]: !selectedOptions[name] });\r\n    };\r\n\r\n    const handleDomainsChange = (e) => {\r\n        setDomainsToBlock(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            const domainsArray = domainsToBlock.split('\\n')\r\n                .map(domain => domain.trim())\r\n                .filter(domain => domain.length > 0);\r\n\r\n            const response = await fetch('http://localhost:5000/api/report', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    login: formData.login,\r\n                    options: selectedOptions,\r\n                    domains_to_block: domainsArray\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Ошибка при генерации отчета');\r\n            }\r\n\r\n            navigate('/report', { state: data });\r\n        } catch (err) {\r\n            setError(err.message);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h1>Настройка отчёта для роутера</h1>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Логин:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"login\"\r\n                        value={formData.login}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Пароль:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"options-group\">\r\n                    <h3>Выберите данные для отчёта:</h3>\r\n                    {Object.entries(selectedOptions).map(([key, value]) => (\r\n                        <div key={key} className=\"toggle-switch\">\r\n                            <label>\r\n                                {key === 'name' && 'Название роутера'}\r\n                                {key === 'interfaces' && 'Сетевые интерфейсы'}\r\n                                {key === 'load' && 'Загруженность CPU/RAM'}\r\n                                {key === 'encryption' && 'Настройки шифрования'}\r\n                                {key === 'blockedResources' && 'Заблокированные ресурсы'}\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={value}\r\n                                    onChange={() => handleToggleChange(key)}\r\n                                    className=\"toggle-input\"\r\n                                />\r\n                                <span className=\"toggle-slider\"></span>\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Домены для блокировки (по одному на строку):</label>\r\n                    <textarea\r\n                        name=\"domainsToBlock\"\r\n                        value={domainsToBlock}\r\n                        onChange={handleDomainsChange}\r\n                        rows={4}\r\n                        placeholder=\"example.com\\nyoutube.com\"\r\n                    />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"submit-btn\" disabled={isLoading}>\r\n                    {isLoading ? 'Формирование отчета...' : 'Сформировать отчёт'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RouterForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC;IACnDa,IAAI,EAAE,KAAK;IACXC,UAAU,EAAE,KAAK;IACjBC,IAAI,EAAE,KAAK;IACXC,UAAU,EAAE,KAAK;IACjBC,gBAAgB,EAAE;EACtB,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMwB,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEZ,IAAI;MAAEa;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCnB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,IAAI,GAAGa;IAAM,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,kBAAkB,GAAIf,IAAI,IAAK;IACjCD,kBAAkB,CAAC;MAAE,GAAGD,eAAe;MAAE,CAACE,IAAI,GAAG,CAACF,eAAe,CAACE,IAAI;IAAE,CAAC,CAAC;EAC9E,CAAC;EAED,MAAMgB,mBAAmB,GAAIJ,CAAC,IAAK;IAC/BN,iBAAiB,CAACM,CAAC,CAACE,MAAM,CAACD,KAAK,CAAC;EACrC,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOL,CAAC,IAAK;IAC9BA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClBV,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA,MAAMS,YAAY,GAAGd,cAAc,CAACe,KAAK,CAAC,IAAI,CAAC,CAC1CC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAC5BC,MAAM,CAACF,MAAM,IAAIA,MAAM,CAACG,MAAM,GAAG,CAAC,CAAC;MAExC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBpC,KAAK,EAAEF,QAAQ,CAACE,KAAK;UACrBqC,OAAO,EAAEnC,eAAe;UACxBoC,gBAAgB,EAAEf;QACtB,CAAC;MACL,CAAC,CAAC;MAEF,MAAMgB,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElC,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,6BAA6B,CAAC;MAClE;MAEA9C,QAAQ,CAAC,SAAS,EAAE;QAAE+C,KAAK,EAAEL;MAAK,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOM,GAAG,EAAE;MACV/B,QAAQ,CAAC+B,GAAG,CAACF,OAAO,CAAC;IACzB,CAAC,SAAS;MACN/B,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAKoD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BrD,OAAA;MAAAqD,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpCtC,KAAK,iBAAInB,OAAA;MAAKoD,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAElC;IAAK;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtDzD,OAAA;MAAM0D,QAAQ,EAAE/B,YAAa;MAAA0B,QAAA,gBACzBrD,OAAA;QAAKoD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBrD,OAAA;UAAAqD,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBzD,OAAA;UACI2D,IAAI,EAAC,MAAM;UACXjD,IAAI,EAAC,OAAO;UACZa,KAAK,EAAEnB,QAAQ,CAACE,KAAM;UACtBsD,QAAQ,EAAEvC,iBAAkB;UAC5BwC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNzD,OAAA;QAAKoD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBrD,OAAA;UAAAqD,QAAA,EAAO;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtBzD,OAAA;UACI2D,IAAI,EAAC,UAAU;UACfjD,IAAI,EAAC,UAAU;UACfa,KAAK,EAAEnB,QAAQ,CAACG,QAAS;UACzBqD,QAAQ,EAAEvC,iBAAkB;UAC5BwC,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENzD,OAAA;QAAKoD,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BrD,OAAA;UAAAqD,QAAA,EAAI;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACnCK,MAAM,CAACC,OAAO,CAACvD,eAAe,CAAC,CAACuB,GAAG,CAAC,CAAC,CAACiC,GAAG,EAAEzC,KAAK,CAAC,kBAC9CvB,OAAA;UAAeoD,SAAS,EAAC,eAAe;UAAAC,QAAA,eACpCrD,OAAA;YAAAqD,QAAA,GACKW,GAAG,KAAK,MAAM,IAAI,kBAAkB,EACpCA,GAAG,KAAK,YAAY,IAAI,oBAAoB,EAC5CA,GAAG,KAAK,MAAM,IAAI,uBAAuB,EACzCA,GAAG,KAAK,YAAY,IAAI,sBAAsB,EAC9CA,GAAG,KAAK,kBAAkB,IAAI,yBAAyB,eACxDhE,OAAA;cACI2D,IAAI,EAAC,UAAU;cACfM,OAAO,EAAE1C,KAAM;cACfqC,QAAQ,EAAEA,CAAA,KAAMnC,kBAAkB,CAACuC,GAAG,CAAE;cACxCZ,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC,eACFzD,OAAA;cAAMoD,SAAS,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC;QAAC,GAdFO,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeR,CACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENzD,OAAA;QAAKoD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBrD,OAAA;UAAAqD,QAAA,EAAO;QAA4C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3DzD,OAAA;UACIU,IAAI,EAAC,gBAAgB;UACrBa,KAAK,EAAER,cAAe;UACtB6C,QAAQ,EAAElC,mBAAoB;UAC9BwC,IAAI,EAAE,CAAE;UACRC,WAAW,EAAC;QAA0B;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENzD,OAAA;QAAQ2D,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,YAAY;QAACgB,QAAQ,EAAEnD,SAAU;QAAAoC,QAAA,EAC5DpC,SAAS,GAAG,wBAAwB,GAAG;MAAoB;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACvD,EAAA,CAnIID,UAAU;EAAA,QACKH,WAAW;AAAA;AAAAuE,EAAA,GAD1BpE,UAAU;AAqIhB,eAAeA,UAAU;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}